on:

  push:
    branches:
      - master
  schedule:
    - cron: '0 0 * * 1'

name: Checkout and Create Release Version

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1
        id: setup-chrome
        with:
          chrome-version: 'stable'
      - name: Chrome version
        run: |
          echo ${{ steps.setup-chrome.outputs.chrome-version }}
      - name: Create Tag
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag -a ${{ steps.setup-chrome.outputs.chrome-version }} -m "Release Version ${{ steps.setup-chrome.outputs.chrome-version }}"
          git push origin ${{ steps.setup-chrome.outputs.chrome-version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Compress Chrome
        run: |
          7z a -tzip chrome-win.zip 'C:\Program Files\Google\Chrome'
      - name: Download Driver
        run: |
          $build_version="${{ steps.setup-chrome.outputs.chrome-version }}".Split('.')[0]
          $release_version=Invoke-WebRequest -Uri https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$build_version | Select -ExpandProperty Content
          Invoke-WebRequest -Uri https://chromedriver.storage.googleapis.com/$release_version/chromedriver_win32.zip -OutFile chromedriver_win32.zip
      - name: Create Release
        run: |
          gh release create ${{ steps.setup-chrome.outputs.chrome-version }} --notes "Release ${{ steps.setup-chrome.outputs.chrome-version }}"
          gh release upload ${{ steps.setup-chrome.outputs.chrome-version }} chrome-win.zip
          gh release upload ${{ steps.setup-chrome.outputs.chrome-version }} chromedriver_win32.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}